# Generated by Django 4.1 on 2022-08-26 04:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("national_code", models.CharField(max_length=255)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("title", models.CharField(max_length=255)),
                ("theorical_units", models.IntegerField(default=1)),
                ("practical_units", models.IntegerField(default=0)),
                ("price", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Presentation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("term", models.IntegerField()),
                ("status", models.CharField(max_length=255)),
                ("code", models.IntegerField()),
                ("day", models.CharField(max_length=255)),
                (
                    "presentation_type",
                    models.CharField(
                        choices=[
                            ("COMPENSATIONAL", "compensational"),
                            ("GENERAL", "general"),
                            ("PROFESSIONAL", "professional"),
                            ("MAIN", "main"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "class_type",
                    models.CharField(
                        choices=[
                            ("COMPENSATIONAL", "compensational"),
                            ("GENERAL", "general"),
                            ("PROFESSIONAL", "professional"),
                            ("MAIN", "main"),
                        ],
                        max_length=50,
                    ),
                ),
                ("exam_at", models.DateTimeField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.course",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("start_at", models.DateTimeField()),
                ("end_at", models.DateTimeField()),
                (
                    "presentation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.presentation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Term",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("semi_year", models.CharField(max_length=20)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                (
                    "term",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.term",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("score", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PASSED", "passed"),
                            ("REJECTED", "rejected"),
                            ("DELETED", "deleted"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.course",
                    ),
                ),
                (
                    "term",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.term",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StudentSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.session",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Professor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("salary", models.BigIntegerField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="presentation",
            name="professor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="university.professor"
            ),
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                ("path", models.CharField(max_length=255)),
                ("mime_type", models.CharField(max_length=20)),
                ("size", models.IntegerField()),
                ("extension", models.CharField(max_length=255)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="instead of delete with just controll activation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="time of object creation"
                    ),
                ),
                (
                    "modeified_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="every time any objects have a change this item will be updated to",
                    ),
                ),
                ("deleted_at", models.DateTimeField(help_text="deactivation time")),
                (
                    "presentation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="university.presentation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
